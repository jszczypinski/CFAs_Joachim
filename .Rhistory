model_fit = cfa(new_model, data = d, estimator = "WLSMV", std.lv=TRUE, missing = "listwise")
summary(model_fit,standardized=T, fit.measures = T)
model_fit = cfa(model, data = d, estimator = "WLSMV", std.lv=TRUE, missing = "listwise", ordered = T)
summary(model_fit,standardized=T, fit.measures = T, ordered = T)
new_model = 'positive =~ IVI_21 + IVI_20 + IVI_24 + IVI_19 + IVI_2 + IVI_7 +
IVI_18 + IVI_9 + IVI_8
negative =~ IVI_25 + IVI_16 + IVI_26 +IVI_14 +IVI_1 +IVI_6 + IVI_4 + IVI_11 + IVI_23 +IVI_22 +IVI_15 +IVI_12 + IVI_3'
model_fit = cfa(new_model, data = d, estimator = "WLSMV", std.lv=TRUE, missing = "listwise")
summary(model_fit,standardized=T, fit.measures = T, ordered = T)
model_fit = cfa(new_model, data = d, estimator = "WLSMV", std.lv=TRUE, missing = "listwise",, ordered = T)
summary(model_fit,standardized=T, fit.measures = T)
model_fit = cfa(new_model, data = d, estimator = "WLSMV", std.lv=TRUE, missing = "listwise", ordered = T)
summary(model_fit,standardized=T, fit.measures = T)
new_model = 'positive =~ IVI_21 + IVI_20 + IVI_24 + IVI_19 + IVI_2 + IVI_7 +
IVI_18 + IVI_9 + IVI_8
negative =~ IVI_25 + IVI_16 + IVI_26 +IVI_14 +IVI_1 +IVI_6 + IVI_4 + IVI_11 + IVI_23 +IVI_22 +IVI_15 +IVI_12 + IVI_3'
model_fit = cfa(new_model, data = d, estimator = "WLSMV", std.lv=TRUE, missing = "listwise", ordered = T)
library(coefficientalpha)
library(semTools)
library(semPlot)
# Correlation matrix of items
cormat <- d %>%
select(starts_with("IVI")) %>%
cor()# Correlation matrix plot
### CORMAT
library("dplyr")
library("corrplot")
# Correlation matrix of items
cormat <- d %>%
select(starts_with("IVI")) %>%
cor()# Correlation matrix plot
corrplot(cormat, order = "hclust", addrect = 2)
?corrplot
corrplot(cormat, order = "FPC", addrect = 2)
corrplot(cormat, order = "hclust", addrect = 2)
?corrplot
corrplot(cormat, order = "hclust")
corrplot(cormat, order = "hclust", addrect = 2)
corrplot(cormat, order = "hclust", addrect = 4)
positive = d[c('IVI_21','IVI_20','IVI_24','IVI_19','IVI_2','IVI_7', 'IVI_17', 'IVI_18','IVI_9','IVI_8','IVI_5','IVI_13')]
alpha(positive)
library(psych)
omega(d)
alpha(positive)
corrplot(cormat, order = "hclust", addrect = 3)
corrplot(cormat, order = "hclust", addrect = 6)
corrplot(cormat, order = "hclust", addrect = 3)
iclust (d)
corrplot(cormat, order = "hclust", addrect = 3, method="color", tl.pos="n",
cl.lim=c(0,1), col=colorRampPalette(c("blue","white","red"))(200))
corrplot(cormat, order = "hclust", addrect = 3, method="color", tl.pos="n",
cl.lim=c(-1,1), col=colorRampPalette(c("blue","white","red"))(200))
library(coefficientalpha)
omega(positive, varphi = 0.1, se = FALSE, test = TRUE,
complete =TRUE, auxiliary = NULL, drop, silent = TRUE)
positive = d[c('IVI_21','IVI_20','IVI_24','IVI_19','IVI_2','IVI_7', 'IVI_17', 'IVI_18','IVI_9','IVI_8','IVI_5','IVI_13')]
omega(positive, varphi = 0.1, se = FALSE, test = TRUE,
complete =TRUE, auxiliary = NULL, drop, silent = TRUE)
omega(positive, varphi = 0.1, se = FALSE, test = TRUE,
complete =TRUE, auxiliary = NULL, silent = TRUE)
library(psych)
omega(d, 2, pc = 'pa')
omega(m = d, nfactors = 2, pc = 'pa')
setwd("f:/projekty/Joachim/IVI")
d <- read.csv("IVI.csv", sep=",", header =T)
library(lavaan)
library(lavaanPlot)
library(car)
library(psych)
library(dplyr)
library(tidyr)
library(scales)
library(coefficientalpha)
library(semTools)
library(semPlot)
library(tidySEM)
library(ggplot2)
library(RBtest)
colnames(d)[1] = 'IVI_1'
model = 'metaphysical =~ IVI_1 + IVI_3 + IVI_4 + IVI_5 + IVI_6 + IVI_8 + IVI_13 +
IVI_14 + IVI_15 + IVI_16 + IVI_17 + IVI_25 + IVI_26
positive =~ IVI_2 + IVI_7 + IVI_9 +IVI_18 +IVI_19 +IVI_20 + IVI_21 + IVI_24
loss_of_control =~ IVI_10 +IVI_11 +IVI_12 +IVI_22 +IVI_23'
model_fit = cfa(model, data = d, estimator = "WLSMV", std.lv=TRUE, missing = "listwise", ordered = T)
summary(model_fit,standardized=T, fit.measures = T, ordered = T)
omega(m = d, nfactors = 2, pc = 'pa')
omega(m = cor(d), nfactors = 2, pc = 'pa')
model = 'metaphysical =~ IVI_1 + IVI_3 + IVI_4 + IVI_5 + IVI_6 + IVI_8 + IVI_13 +
IVI_14 + IVI_15 + IVI_16 + IVI_17 + IVI_25 + IVI_26
positive =~ IVI_2 + IVI_7 + IVI_9 +IVI_18 +IVI_19 +IVI_20 + IVI_21 + IVI_24
loss_of_control =~ IVI_10 +IVI_11 +IVI_12 +IVI_22 +IVI_23'
model_fit = cfa(model, data = d, estimator = "WLSMV", std.lv=TRUE, missing = "listwise", ordered = T)
setwd("f:/projekty/Joachim/IVI")
d <- read.csv("IVI.csv", sep=",", header =T)
colnames(d)[1] = 'IVI_1'
library(psych)
omega(m = cor(d), nfactors = 2, pc = 'pa')
omega(m = cor(d), nfactors = 3, pc = 'pa')
### CORMAT
library("dplyr")
library("corrplot")
# Correlation matrix of items
cormat <- d %>%
select(starts_with("IVI")) %>%
cor()# Correlation matrix plot
corrplot.mixed(cormat)
corrplot(cormat, order = "hclust", addrect = 3, method="color", tl.pos="n",
cl.lim=c(-1,1), col=colorRampPalette(c("blue","white","red"))(200))
cor.test(d$IVI_19,d$IVI_7)
d2 =  d[c('IVI_2','IVI_3','IVI_4','IVI_5','IVI_6','IVI_7', 'IVI_8', 'IVI_9','IVI_10',
'IVI_11','IVI_12','IVI_15','IVI_18','IVI_19','IVI_20',
'IVI_21','IVI_22','IVI_23','IVI_24')]
omega(m = cor(d2), nfactors = 2, pc = 'pa')
knitr::opts_chunk$set(echo = TRUE)
setwd("f:/projekty/Joachim/GPTS")
d <- read.csv("GPTS.csv", sep=",", header =T)
d <- read.csv("GPTS.csv", sep=",", header =T)
setwd("f:/projekty/Joachim/GPTS")
d <- read.csv("GPTS.csv", sep=",", header =T)
length(d)
ncol(d)
mylist = list(1,2,"C",4,5)
umlist(mylist)
unlist(mylist)
library(DescTools)
deliver = aggregate (count, by=list(area,driver),DUN=mean())
attach(d.pizza)
deliver = aggregate (count, by=list(area,driver),DUN=mean())
deliver = aggregate (count, by=list(area,driver),FUN=mean())
library(lavaan)
library(semTools)
setwd("f:/projekty/Joachim/PQ16")
d <- read.csv("PQ16.csv", sep=",", header =T)
# Configural invariance
cfa.config <- cfa(model3, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE)
model3 = ' factor =~ pq1 + pq2 + pq3 + pq4 + pq5 + pq6 + pq7 + pq8 + pq9 + pq10 +
pq11 + pq12 + pq13 + pq14 + pq15 + pq16
pq7 ~~ pq14
pq1 ~~ pq7'
# Configural invariance
cfa.config <- cfa(model3, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE)
colnames(d)[1] = 'pq1'
d = subset(d, badanie == 2)
# Configural invariance
cfa.config <- cfa(model3, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE)
# metric
cfa.metric <- cfa(model3, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings')
compareFit(cfa.config, cfa.metric)
compareFit(cfa.config, cfa.metric)
setwd("f:/projekty/Joachim/PQ16")
d <- read.csv("PQ16.csv", sep=",", header =T)
library(lavaan)
library(semTools)
colnames(d)[1] = 'pq1'
d = subset(d, badanie == 2)
model3 = ' factor =~ pq1 + pq2 + pq3 + pq4 + pq5 + pq6 + pq7 + pq8 + pq9 + pq10 +
pq11 + pq12 + pq13 + pq14 + pq15 + pq16
pq7 ~~ pq14
pq1 ~~ pq7'
# Configural invariance
cfa.config <- cfa(model3, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE)
# metric
cfa.metric <- cfa(model3, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings')
compareFit(cfa.config, cfa.metric)
?compareFit()
compareFit(cfa.config, cfa.metric, nested = T )
x = compareFit(cfa.config, cfa.metric, nested = T )
x
lavTestScore(cfa.metric)
parTable(cfa.metric)
?max.print
options(max.print=1000000)
parTable(cfa.metric)
model3 = ' factor =~ pq1 + pq2 + pq3 + pq4 + pq5 + pq6 + pq7 + pq8 + pq9 + pq10 +
pq11 + pq12 + pq13 + pq14 + pq15 + pq16
pq7 ~~ pq14
pq1 ~~ pq7
.p1. == .p117.'
# metric
cfa.metric <- cfa(model3, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings')
summary(cfa.config, fit.measures = TRUE, standardized = TRUE)
lavTestScore(cfa.metric)
model3 = ' factor =~ pq1 + pq2 + pq3 + pq4 + pq5 + pq6 + pq7 + pq8 + pq9 + pq10 +
pq11 + pq12 + pq13 + pq14 + pq15 + pq16
pq7 ~~ pq14
pq1 ~~ pq7'
# metric
cfa.metric <- cfa(model3, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings', group.partial = 'pq1')
x = compareFit(cfa.config, cfa.metric, nested = T )
x
parTable(cfa.metric)
lavTestScore(cfa.metric)
# metric
cfa.metric <- cfa(model3, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings', group.partial = 'pq1 ~1')
lavTestScore(cfa.metric)
# metric
cfa.metric <- cfa(model3, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings', group.partial = c('pq1 ~1'))
x = compareFit(cfa.config, cfa.metric, nested = T )
x
lavTestScore(cfa.metric)
# metric
cfa.metric <- cfa(model3, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings', group.partial = c('pq1 ~ 1', 'pq2 ~ 1', 'pq3 ~ 1'))
x = compareFit(cfa.config, cfa.metric, nested = T )
x
model3 = ' factor =~ pq1 + pq2 + pq3 + pq4 + pq5 + pq6 + pq7 + pq8 + pq9 + pq10 +
pq11 + pq12 + pq13 + pq14 + pq15 + pq16
pq7 ~~ pq14
pq1 ~~ pq7'
# Configural invariance
cfa.config <- cfa(model3, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE)
# metric
cfa.metric <- cfa(model3, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings', group.partial = c('pq1 ~ 1', 'pq2 ~ 1', 'pq3 ~ 1'))
x = compareFit(cfa.config, cfa.metric, nested = T )
x
?group.partial
# metric
cfa.metric <- cfa(model3, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings', group.partial = c('factor  =~    pq1'))
summary(cfa.config, fit.measures = TRUE, standardized = TRUE)
x = compareFit(cfa.config, cfa.metric, nested = T )
x
# metric
cfa.metric <- cfa(model3, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings', group.partial = c('factor  =~ pq1', 'factor  =~ pq2', 'factor  =~ pq3'))
x = compareFit(cfa.config, cfa.metric, nested = T )
x
parTable(cfa.metric)
lavTestScore(cfa.metric)
### MODEL INVARIANCE
setwd("f:/projekty/Joachim/BAPS")
d <- read.csv("BAPS.csv", sep=",", header =T)
library(lavaan)
library(semTools)
colnames(d)[1] = 'BAPS1'
model3 = 'survival_strategy =~ BAPS2 + BAPS3 + BAPS4 + BAPS5 + BAPS6
negative_beliefs =~ BAPS7 + BAPS8 + BAPS9 + BAPS10 + BAPS11 + BAPS12
normalizing_beliefs =~ BAPS13 + BAPS14 + BAPS15 + BAPS16 + BAPS17 + BAPS18
BAPS13 ~~ BAPS14'
View(d)
#Configural invariance
cfa.config <- cfa(model3, data = d, estimator = "WLSMV", group = "diagnoza",
std.lv=TRUE, missing = "listwise", ordered = TRUE)
summary(cfa.config, fit.measures = TRUE, standardized = TRUE)
# metric
cfa.metric <- cfa(model3, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings')
# metric
cfa.metric <- cfa(model3, data = d, estimator = "WLSMV", group = "diagnoza",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings')
x = compareFit(cfa.config, cfa.metric, nested = T )
x
round(robust_dif(cfa.config,cfa.metric), digits = 3)
round(robust_dif(cfa.config,cfa.metric), digits = 10)
x = compareFit(cfa.config, cfa.metric, nested = T )
x
round(robust_dif(cfa.metric,cfa.config), digits = 3)
# scalar
cfa.scalar <- cfa(model3, data = d, estimator = "WLSMV", group = "diagnoza",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = c('loadings', 'intercepts'))
x = compareFit(cfa.metric, cfa.scalar, nested = T )
x
# scalar
cfa.strict <- cfa(model3, data = d, estimator = "WLSMV", group = "diagnoza",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = c('loadings', 'intercepts', 'residuals'))
x = compareFit(cfa.scalar, cfa.strict, nested = T )
x
# scalar
cfa.strict <- cfa(model3, data = d, estimator = "WLSMV", group = "diagnoza",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = c('loadings', 'intercepts', 'residuals'))
x = compareFit(cfa.scalar, cfa.strict, nested = T )
x
setwd("f:/projekty/Joachim/GPTS")
d <- read.csv("GPTS.csv", sep=",", header =T)
colnames(d)[1] = 'PartA_gptsa1'
#Configural invariance
cfa.config <- cfa(model5, data = d, estimator = "WLSMV", group = "diagnoza",
std.lv=TRUE, missing = "listwise", ordered = TRUE)
model5 = 'reference =~ PartA_gptsa1 + PartA_gptsa2 +PartA_gptsa3 + PartA_gptsa4 +
PartA_gptsa5 + PartA_gptsa6 + PartA_gptsa7
persecutory =~ partB_gptsb1 + partB_gptsb2 + partB_gptsb3 + partB_gptsb4 +
partB_gptsb5 + partB_gptsb6 + partB_gptsb7 + partB_gptsb8 + partB_gptsb9 +
partB_gpts10
partB_gptsb2 ~~ partB_gptsb4
partB_gptsb3 ~~ partB_gptsb4
partB_gptsb2 ~~ partB_gptsb3'
#Configural invariance
cfa.config <- cfa(model5, data = d, estimator = "WLSMV", group = "diagnoza",
std.lv=TRUE, missing = "listwise", ordered = TRUE)
#Configural invariance
cfa.config <- cfa(model5, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE)
summary(cfa.config, fit.measures = TRUE, standardized = TRUE)
# metric
cfa.metric <- cfa(model5, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings')
x = compareFit(cfa.config, cfa.metric, nested = T )
x
# scalar
cfa.scalar <- cfa(model5, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = c('loadings', 'intercepts'))
x = compareFit(cfa.metric, cfa.scalar, nested = T )
x
# scalar
cfa.strict <- cfa(model5, data = d, estimator = "WLSMV", group = "diagnoza",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = c('loadings', 'intercepts', 'residuals'))
# scalar
cfa.strict <- cfa(model5, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = c('loadings', 'intercepts', 'residuals'))
x = compareFit(cfa.scalar, cfa.strict, nested = T )
x
lavTestScore(cfa.metric)
parTable(cfa.metric)
# metric
cfa.metric <- cfa(model5, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings',group.partial = c(' reference  =~ PartA_gptsa1 '))
x = compareFit(cfa.config, cfa.metric, nested = T )
x
# metric
cfa.metric <- cfa(model5, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings',group.partial = c(' reference  =~ PartA_gptsa1 ',' reference  =~ PartA_gptsa1 ' ))
summary(cfa.config, fit.measures = TRUE, standardized = TRUE)
x = compareFit(cfa.config, cfa.metric, nested = T )
x
lavTestScore(cfa.metric)
parTable(cfa.metric)
# metric
cfa.metric <- cfa(model5, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings',group.partial = c(' reference  =~ PartA_gptsa1 ','persecutory  =~ partB_gptsb7' ))
x = compareFit(cfa.config, cfa.metric, nested = T )
x
lavTestScore(cfa.metric)
# metric
cfa.metric <- cfa(model5, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings')
lavTestScore(cfa.metric)
# metric
cfa.metric <- cfa(model5, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings',group.partial = c('persecutory  =~ partB_gptsb7' ))
x = compareFit(cfa.config, cfa.metric, nested = T )
x
# scalar
cfa.scalar <- cfa(model5, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = c('loadings', 'intercepts'))
# scalar
cfa.scalar <- cfa(model5, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = c('loadings', 'intercepts'),group.partial = c('persecutory  =~ partB_gptsb7' ))
x = compareFit(cfa.metric, cfa.scalar, nested = T )
x
lavTestScore(cfa.scalar)
parTable(cfa.scalar)
# scalar
cfa.scalar <- cfa(model5, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = c('loadings', 'intercepts'),group.partial = c('persecutory  =~ partB_gptsb7', 'reference  =~ PartA_gptsa2' ))
x = compareFit(cfa.metric, cfa.scalar, nested = T )
x
# strict
cfa.strict <- cfa(model5, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE,
group.equal = c('loadings', 'intercepts', 'residuals'),
group.partial = c('persecutory  =~ partB_gptsb7', 'reference  =~ PartA_gptsa2' )))
# strict
cfa.strict <- cfa(model5, data = d, estimator = "WLSMV", group = "diag",
std.lv=TRUE, missing = "listwise", ordered = TRUE,
group.equal = c('loadings', 'intercepts', 'residuals'),
group.partial = c('persecutory  =~ partB_gptsb7', 'reference  =~ PartA_gptsa2' ))
x = compareFit(cfa.scalar, cfa.strict, nested = T )
x
parTable(cfa.strict)
lavTestScore(cfa.strict)
summary(cfa.config, fit.measures = TRUE, standardized = TRUE)
setwd("f:/projekty/Joachim/BAPS")
d <- read.csv("BAPS.csv", sep=",", header =T)
library(lavaan)
library(semTools)
colnames(d)[1] = 'BAPS1'
#### MODEL 1
model = 'survival_strategy =~ BAPS1 + BAPS2 + BAPS3 + BAPS4 + BAPS5 + BAPS6
negative_beliefs =~ BAPS7 + BAPS8 + BAPS9 + BAPS10 + BAPS11 + BAPS12
normalizing_beliefs =~ BAPS13 + BAPS14 + BAPS15 + BAPS16 + BAPS17 + BAPS18'
fit = cfa(model, data = d, estimator = 'WLSMV', ordered = TRUE, std.lv=TRUE, missing = "listwise",)
summary(fit, fit.measures=TRUE, standardized=TRUE)
reliability(fit)
mod_indices = modificationindices(fit)
head(mod_indices[order(mod_indices$mi, decreasing = T),],10)
fits = fitmeasures(fit,c('chisq.scaled', 'df.scaled', 'chisq.scaling.factor','cfi.scaled','tli.scaled','rmsea.scaled','srmr'))
### MODEL 2
model2 = 'survival_strategy =~ BAPS2 + BAPS3 + BAPS4 + BAPS5 + BAPS6
negative_beliefs =~ BAPS7 + BAPS8 + BAPS9 + BAPS10 + BAPS11 + BAPS12
normalizing_beliefs =~ BAPS13 + BAPS14 + BAPS15 + BAPS16 + BAPS17 + BAPS18'
fit2 = cfa(model2, data = d, estimator = 'WLSMV', ordered = TRUE, std.lv=TRUE, missing = "listwise",)
summary(fit2, fit.measures=TRUE, standardized=TRUE)
reliability(fit2)
mod_indices = modificationindices(fit2)
head(mod_indices[order(mod_indices$mi, decreasing = T),],10)
fits2 = fitmeasures(fit2,c('chisq.scaled', 'df.scaled', 'chisq.scaling.factor','cfi.scaled','tli.scaled','rmsea.scaled','srmr'))
#### MODEL 3
model3 = 'survival_strategy =~ BAPS2 + BAPS3 + BAPS4 + BAPS5 + BAPS6
negative_beliefs =~ BAPS7 + BAPS8 + BAPS9 + BAPS10 + BAPS11 + BAPS12
normalizing_beliefs =~ BAPS13 + BAPS14 + BAPS15 + BAPS16 + BAPS17 + BAPS18
BAPS13 ~~ BAPS14'
fit3 = cfa(model3, data = d, estimator = 'WLSMV', ordered = TRUE, std.lv=TRUE, missing = "listwise",)
summary(fit3, fit.measures=TRUE, standardized=TRUE)
reliability(fit3)
mod_indices = modificationindices(fit3)
head(mod_indices[order(mod_indices$mi, decreasing = T),],10)
fits3 = fitmeasures(fit3,c('chisq.scaled', 'df.scaled', 'chisq.scaling.factor','cfi.scaled','tli.scaled','rmsea.scaled','srmr'))
### MODEL INVARIANCE
setwd("f:/projekty/Joachim/BAPS")
d <- read.csv("BAPS.csv", sep=",", header =T)
library(lavaan)
library(semTools)
colnames(d)[1] = 'BAPS1'
model3 = 'survival_strategy =~ BAPS2 + BAPS3 + BAPS4 + BAPS5 + BAPS6
negative_beliefs =~ BAPS7 + BAPS8 + BAPS9 + BAPS10 + BAPS11 + BAPS12
normalizing_beliefs =~ BAPS13 + BAPS14 + BAPS15 + BAPS16 + BAPS17 + BAPS18
BAPS13 ~~ BAPS14'
#Configural invariance
cfa.config <- cfa(model3, data = d, estimator = "WLSMV", group = "diagnoza",
std.lv=TRUE, missing = "listwise", ordered = TRUE)
summary(cfa.config, fit.measures = TRUE, standardized = TRUE)
# metric
cfa.metric <- cfa(model3, data = d, estimator = "WLSMV", group = "diagnoza",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = 'loadings')
summary(cfa.config, fit.measures = TRUE, standardized = TRUE)
x = compareFit(cfa.config, cfa.metric, nested = T )
x
# scalar
cfa.scalar <- cfa(model3, data = d, estimator = "WLSMV", group = "diagnoza",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = c('loadings', 'intercepts'))
summary(cfa.config, fit.measures = TRUE, standardized = TRUE)
x = compareFit(cfa.metric, cfa.scalar, nested = T )
x
# scalar
cfa.strict <- cfa(model3, data = d, estimator = "WLSMV", group = "diagnoza",
std.lv=TRUE, missing = "listwise", ordered = TRUE, group.equal = c('loadings', 'intercepts', 'residuals'))
summary(cfa.config, fit.measures = TRUE, standardized = TRUE)
x = compareFit(cfa.scalar, cfa.strict, nested = T )
x
robust_dif = function (x,y) {
fit_x = fitmeasures(x,c('chisq.scaled', 'df.scaled', 'chisq.scaling.factor'))
fit_y= fitmeasures(y,c('chisq.scaled', 'df.scaled', 'chisq.scaling.factor'))
fit_x=as.list(fit_x)
fit_y=as.list(fit_y)
cd = (fit_x$df.scaled * fit_x$chisq.scaling.factor - fit_y$df.scaled * fit_y$chisq.scaling.factor)/
(fit_x$df.scaled-fit_y$df.scaled)
Test_stat = (fit_x$chisq.scaled * fit_x$chisq.scaling.factor -
fit_y$chisq.scaled * fit_y$chisq.scaling.factor) /cd
p_val = pchisq(Test_stat,df=fit_x$df.scaled-fit_y$df.scaled, lower.tail = FALSE)
Test = c(Test_stat,p_val)
return(Test)
}
robust_dif(cfa.strict, cfa.scalar)
round(robust_dif(cfa.strict,cfa.scalar), digits = 3)
library(psych)
omega(m = cor(d), nfactors = 3, pc = 'pa')
setwd("f:/projekty/Joachim/IVI")
d <- read.csv("IVI.csv", sep=",", header =T)
library(lavaan)
library(lavaanPlot)
colnames(d)[1] = 'IVI_1'
model = 'metaphysical =~ IVI_1 + IVI_3 + IVI_4 + IVI_5 + IVI_6 + IVI_8 + IVI_13 +
IVI_14 + IVI_15 + IVI_16 + IVI_17 + IVI_25 + IVI_26
positive =~ IVI_2 + IVI_7 + IVI_9 +IVI_18 +IVI_19 +IVI_20 + IVI_21 + IVI_24
loss_of_control =~ IVI_10 +IVI_11 +IVI_12 +IVI_22 +IVI_23'
model_fit = cfa(model, data = d, estimator = "WLSMV", std.lv=TRUE, missing = "listwise", ordered = T)
summary(model_fit,standardized=T, fit.measures = T, ordered = T)
library(psych)
omega(m = cor(d), nfactors = 3, pc = 'pa')
iclust((polychoric(d)))
View(d)
polychoric(d)
?iclust
library(EFA.dimensions)
x = POLYCHORIC_R(d)
x = POLYCHORIC_R(d, verbose =F)
x = POLYCHORIC_R(d, verbose = F)
x = POLYCHORIC_R(d)
x = POLYCHORIC_R(d, method = "Fox")
View(x)
iclust((POLYCHORIC_R(d, method = "Fox", verbose = F)))
omega(m = POLYCHORIC_R(d, method = "Fox", verbose = F), nfactors = 2, pc = 'pa')
omega(m = POLYCHORIC_R(d, method = "Fox", verbose = F), nfactors = 2, pc = 'pa', option = 1)
omega(m = POLYCHORIC_R(d, method = "Fox", verbose = F), nfactors = 2, pc = 'pa', option = 2)
omega(m = POLYCHORIC_R(d, method = "Fox", verbose = F), nfactors = 2, pc = 'pa', option = 2)
omega(m = POLYCHORIC_R(d, method = "Fox", verbose = F), nfactors = 2, pc = 'pa')
omega(m = positive, nfactors = 1, pc = 'pa')
iclust((POLYCHORIC_R(d, method = "Fox", verbose = F)))
### CORMAT
library("dplyr")
library("corrplot")
# Correlation matrix of items
cormat <- d %>%
select(starts_with("IVI")) %>%
cor()# Correlation matrix plot
corrplot.mixed(cormat)
corrplot(cormat, order = "hclust", addrect = 3, method="color", tl.pos="n",
cl.lim=c(-1,1), col=colorRampPalette(c("blue","white","red"))(200))
corrplot(cormat, order = "hclust", addrect = 2, method="color", tl.pos="n",
cl.lim=c(-1,1), col=colorRampPalette(c("blue","white","red"))(200))
